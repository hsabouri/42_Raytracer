!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
C_DIR	Makefile	/^C_DIR = srcs$/;"	m
C_DIRS	Makefile	/^C_DIRS = $(shell find $(C_DIR) -type d -print)$/;"	m
C_FILES	Makefile	/^C_FILES = $(shell find $(C_DIR) -type f -print | grep "\\.c" | grep -v ".swp")$/;"	m
FLAGS	Makefile	/^FLAGS = -Wextra -Wall$/;"	m
H_DIR	Makefile	/^H_DIR = includes$/;"	m
LINKS	Makefile	/^LINKS = -I$(H_DIR)$/;"	m
MAIN	Makefile	/^MAIN = main.c$/;"	m
NAME	Makefile	/^NAME = libobj.a$/;"	m
OBJ_H	includes/obj.h	/^# define OBJ_H$/;"	d
O_DIR	Makefile	/^O_DIR = objects$/;"	m
O_DIRS	Makefile	/^O_DIRS = $(C_DIRS:$(C_DIR)\/%=$(O_DIR)\/%)$/;"	m
O_FILES	Makefile	/^O_FILES = $(C_FILES:$(C_DIR)\/%.c=$(O_DIR)\/%.o)$/;"	m
a	includes/obj.h	/^	unsigned int	a;$/;"	m	struct:s_uint3
add_poly_to_last	srcs/mesh.c	/^t_env				add_poly_to_last(char *line, t_env env)$/;"	f
b	includes/obj.h	/^	unsigned int	b;$/;"	m	struct:s_uint3
c	includes/obj.h	/^	unsigned int	c;$/;"	m	struct:s_uint3
check_params	srcs/open_file.c	/^void		check_params(int ac)$/;"	f
create_lgt	srcs/parse.c	/^t_env		create_lgt(t_ltype type, char *name, t_env env)$/;"	f
create_obj	srcs/parse.c	/^t_env		create_obj(t_type type, char *name, t_env env)$/;"	f
create_vrt	srcs/mesh.c	/^t_env				create_vrt(char *line, t_env env)$/;"	f
display_objs	srcs/debug.c	/^void	display_objs(t_obj *objs)$/;"	f
free_lines	srcs/parse.c	/^static void	free_lines(char *line, char *line2)$/;"	f	file:
is_file	srcs/open_file.c	/^static int	is_file(const char *path)$/;"	f	file:
lgts	srcs/assignation.c	/^t_env			lgts(char *line, t_env env)$/;"	f
meshs	srcs/assignation.c	/^t_env			meshs(char *line, t_env env)$/;"	f
objs	srcs/assignation.c	/^t_env			objs(char *line, t_env env)$/;"	f
open_file	srcs/open_file.c	/^int			open_file(char *path)$/;"	f
parse	srcs/parse.c	/^t_env		parse(int fd, t_env env)$/;"	f
parse_color	srcs/parsing_functions.c	/^t_color	parse_color(char *str)$/;"	f
parse_double	srcs/parsing_functions.c	/^double	parse_double(char *str)$/;"	f
parse_polygon	srcs/mesh.c	/^static t_uint3		parse_polygon(char *line, t_env env)$/;"	f	file:
parse_quat	srcs/parsing_functions.c	/^t_quat	*parse_quat(char *str, t_obj *obj)$/;"	f
parse_vec	srcs/parsing_functions.c	/^t_vec4	parse_vec(char *str)$/;"	f
s_uint3	includes/obj.h	/^typedef struct		s_uint3$/;"	s
static_keeper	srcs/parse.c	/^int			static_keeper(int new, int to_change)$/;"	f
step2_lgts	srcs/assignation.c	/^static t_env	step2_lgts(char *line, t_env env)$/;"	f	file:
step2_objs	srcs/assignation.c	/^static t_env	step2_objs(char *line, t_env env)$/;"	f	file:
t_uint3	includes/obj.h	/^}					t_uint3;$/;"	t	typeref:struct:s_uint3
usage	srcs/error.c	/^void	usage(void)$/;"	f
